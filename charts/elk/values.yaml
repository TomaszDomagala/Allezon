eck-stack:
  eck-elasticsearch:
    enabled: true
    fullnameOverride: elasticsearch
    annotations:
      eck.k8s.elastic.co/license: basic

  eck-kibana:
    enabled: true
    fullnameOverride: kibana
    annotations:
      eck.k8s.elastic.co/license: basic

  eck-beats:
    enabled: true
    fullnameOverride: filebeat
    annotations:
      eck.k8s.elastic.co/license: basic

    serviceAccount:
      name: filebeat

    clusterRole:
      name: filebeat
      rules:
        - apiGroups: [""]
          resources:
            - namespaces
            - pods
            - nodes
          verbs:
            - get
            - list
            - watch

    clusterRoleBinding:
      name: filebeat
      subjects:
        - kind: ServiceAccount
          name: filebeat
          namespace: default
      roleRef:
        kind: ClusterRole
        name: filebeat
        apiGroup: rbac.authorization.k8s.io


    spec:
      type: filebeat
      version: 8.5.0
      elasticsearchRef:
        name: elasticsearch
      kibanaRef:
        name: kibana
      config:
        filebeat:
#          inputs:
#            - type: container
#              paths:
#                - /var/log/containers/*.log
          autodiscover:
            providers:
              - type: kubernetes
                node: ${NODE_NAME}
                hints:
                  enabled: true
                  default_config:
                    type: container
                    paths:
                      - /var/log/containers/*${data.kubernetes.container.id}.log
        processors:
          - add_cloud_metadata: {}
          - add_host_metadata: {}

      daemonSet:
        podTemplate:
          spec:
            serviceAccountName: filebeat
            automountServiceAccountToken: true
            terminationGracePeriodSeconds: 30
            dnsPolicy: ClusterFirstWithHostNet
            hostNetwork: true # Allows to provide richer host metadata
            containers:
              - name: filebeat
                securityContext:
                  runAsUser: 0
                  # If using Red Hat OpenShift uncomment this:
                  #privileged: true
                volumeMounts:
                  - name: varlogcontainers
                    mountPath: /var/log/containers
                  - name: varlogpods
                    mountPath: /var/log/pods
                  - name: varlibdockercontainers
                    mountPath: /var/lib/docker/containers
                env:
                  - name: NODE_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: spec.nodeName
            volumes:
              - name: varlogcontainers
                hostPath:
                  path: /var/log/containers
              - name: varlogpods
                hostPath:
                  path: /var/log/pods
              - name: varlibdockercontainers
                hostPath:
                  path: /var/lib/docker/containers



